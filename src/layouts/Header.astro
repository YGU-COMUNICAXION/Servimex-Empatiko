---
import { Bars3Icon, XMarkIcon } from "@heroicons/react/24/outline";
import { Image } from "astro:assets";

import svgLogo from "@assets/img/logo.png";
import ProductMegaMenu from "@components/ProductMegaMenu.astro";

interface Props {
  type?: "default" | "transparent";
}

const { type = "default" } = Astro.props;
---

<header
  id="header"
  class="flex items-center justify-center
  z-20 fixed w-full left-0 right-0 bg-white transition-colors duration-300"
>
  <div
    class="container relative flex items-center justify-between gap-4 px-4 py-3 lg:p-0 lg:py-4 md:px-0"
  >
    <div class="lg:hidden absolute">
      <Bars3Icon
        id="menu-icon"
        className="text-primary-1 size-8 lg:hidden hover:cursor-pointer"
      />
      <XMarkIcon
        id="close-icon"
        className="text-primary-1 hidden size-8 lg:hidden hover:cursor-pointer"
      />
    </div>

    <div
      class="w-full lg:w-auto
    flex items-center justify-center lg:justify-start"
    >
      <a href="/" class="inline-block">
        <Image
          class=`w-auto object-contain h-10 lg:h-12`
          src={svgLogo}
          alt="logo"
        />
      </a>
    </div>

    <nav
      id="navigator-menu"
      class="fixed z-30 -top-full left-0 right-0 lg:top-0 lg:left-auto lg:right-auto
      flex flex-col items-center justify-center shadow lg:shadow-none p-6 py-8 lg:p-0 lg:py-0
      transition-[top] duration-300 ease-in-out lg:transition-none
      lg:static lg:flex-1 lg:flex lg:items-center lg:gap-4 lg:pt-1 bg-white lg:bg-transparent"
      aria-label="Main navigation"
    >
      <ul
        class=`h-full container flex flex-col lg:flex-row items-center justify-end lg:justify-center  gap-8 lg:gap-4 xl:gap-12
        [&>li>a]:text-primary-1 lg:[&>li]:text-center
        [&>li>a]:relative [&>li>a]:uppercase [&>li>a]:py-2 [&>li]:inline-block
        font-normal text-base xl:text-lg`
      >
        <li>
          <a href={"/"}>Inicio</a>
        </li>

        <!-- Versi贸n Mobile -->
        <li class="lg:!hidden">
          <a href="/productos">Productos</a>
        </li>
        <!-- Versi贸n Desktop -->
        <li class="!hidden lg:!block">
          <ProductMegaMenu />
        </li>

        <li>
          <a href={"/nosotros"}>Nosotros</a>
        </li>
        <li>
          <a href={"/distribuidores"}>Distribuidores</a>
        </li>
        <li>
          <a href={"/contacto"}>Contacto</a>
        </li>
        <li>
          <a href={"/soporte"}>Soporte</a>
        </li>
        <li class="lg:!hidden">
          <a
            class="inline-block lg:hidden px-4 py-2 rounded-full bg-primary-1 !text-neutral-3"
            href={"https://meetings.hubspot.com/jtorres44"}
            >Agenda presentaci贸n</a
          >
        </li>
      </ul>
    </nav>

    <a
      class="uppercase hidden lg:inline-block text-center
      px-4 py-2 rounded-full bg-primary-1 text-neutral-3
      text-base"
      href={"https://meetings.hubspot.com/jtorres44"}>Agenda presentaci贸n</a
    >
  </div>
</header>

<style>
  @reference "../styles/global.css";

  /* Colocar linea color roja del link activo por debajo del link, pero en desktop colocar la linea encima del link */
  #navigator-menu a:is(.active) {
    font-weight: 600;
    /* padding-bottom: 0.25rem; */
    border-bottom: 2px solid #263344;
  }
</style>

<script>
  // Verificar que el DOM este completamente cargado antes de ejecutar el script con la validacion de viewtransiottions de astro
  // con astro-load-page

  document.addEventListener("astro:page-load", () => {
    // Toggle navigation menu
    const barsIcon = document.querySelector("#menu-icon");
    const closeIcon = document.querySelector("#close-icon");
    const navigatorMenu = document.querySelector("#navigator-menu");
    const navigatorLinks = document.querySelector("#navigator-menu ul");
    const header = document.querySelector("#header");

    if (navigatorMenu === null || barsIcon === null || closeIcon === null) {
      throw new Error("Element not found");
    }

    barsIcon.addEventListener("click", () => {
      barsIcon.classList.toggle("hidden");
      closeIcon.classList.toggle("hidden");
      navigatorMenu.classList.toggle("top-16");
    });

    closeIcon.addEventListener("click", () => {
      closeIcon.classList.toggle("hidden");
      barsIcon.classList.toggle("hidden");
      navigatorMenu.classList.toggle("top-16");
    });

    const path = window.location.pathname;
    const links = navigatorLinks?.querySelectorAll("a");

    links?.forEach((link) => {
      if (link.pathname === path) {
        console.log(link.pathname);
        link.classList.add("active");
      }
    });
  });
</script>
