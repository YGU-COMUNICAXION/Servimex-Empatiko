---
import ContactForm from "@components/ContactForm.astro";
import { ArrowDownTrayIcon } from "@heroicons/react/24/outline";
import Layout from "@layouts/Layout.astro";
import { getCollection } from "astro:content";

export const prerender = true;

export async function getStaticPaths() {
  const colecciones = await Promise.all([
    getCollection("software"),
    getCollection("servidores"),
    getCollection("monitores"),
    getCollection("publicadores"),
  ]);

  const entradas = colecciones.flat();

  return entradas.map((entry) => ({
    params: { slug: entry.data.slug },
  }));
}

const slug = Astro.params.slug;

const colecciones = await Promise.all([
  getCollection("software"),
  getCollection("servidores"),
  getCollection("monitores"),
  getCollection("publicadores"),
]);

const entradas = colecciones.flat();
const entry = entradas.find((e) => e.data.slug === slug);

if (!entry) {
  throw new Error(`Producto con slug "${slug}" no encontrado`);
}

const {
  name,
  type,
  image,
  description,
  largeDescription,
  features,
  fullFeatures,
  fullFeaturesTable,
  url,
} = entry.data;
---

<Layout title={name} description={description}>
  <section class="bg-[linear-gradient(45deg,_#F4F6F9_0%,_#D8E6F7_100%)]">
    <div
      class="container flex flex-col md:flex-row items-center justify-between py-8 px-6 lg:px-0 mx-auto"
    >
      <p
        class="font-inter text-normal text-secondary-1 text-lg lg:text-xl xl:text-2xl"
      >
        {type} | <span class="font-semibold">{name}</span>
      </p>

      <div class="flex items-center justify-end gap-4 mt-4 md:mt-0">
        <a
          href={url}
          target="_blank"
          class="flex items-center gap-2 border border-primary-1 text-secondary-1 px-6 py-1 rounded-full
          text-sm lg:text-base font-inter font-normal hover:bg-primary-1 hover:text-white transition"
        >
          <ArrowDownTrayIcon className="w-5 h-5" />
          CATÁLOGO
        </a>
        <a
          href="/contacto"
          class="text-primary-1 text-sm lg:text-base underline hover:text-primary-1 transition"
        >
          ¿Dónde comprar?
        </a>
      </div>
    </div>
  </section>

  <section class="container py-12 px-6 md:px-0 mx-auto">
    <div
      class="bg-[#F9FBFC] rounded-xl shadow p-6 md:p-10 flex flex-col md:flex-row gap-8"
    >
      <div class="flex-1 flex justify-center items-center">
        <img src={image.src} alt={name} class="max-w-full rounded-lg" />
      </div>
      <div class="flex-1 space-y-4 font-inter">
        <h1 class="text-secondary-1 font-extrabold text-xl lg:text-2xl">
          {name}
        </h1>
        <p class="text-primary-1 text-lg lg:text-xl">
          {largeDescription}
        </p>
        <ul
          class="text-[#666666] text-sm lg:text-base list-disc pl-5 space-y-1"
        >
          {features.map((f) => <li>{f}</li>)}
        </ul>
        <button
          id="quote-btn"
          class="inline-block mt-4 px-6 py-1 bg-primary-1 text-[#F7F7F7] rounded-full
          text-base lg:text-lg font-normal font-inter hover:cursor-pointer hover:bg-primary-2 transition"
          >COTIZA</button
        >
      </div>
    </div>

    <!-- Contact Form (oculto inicialmente) -->
    <div id="contact-form" class="hidden container py-8 md:px-0 mx-auto">
      <ContactForm variant="modal" product={name} />
    </div>

    <div class="mt-10 px-2 lg:px-0 font-inter">
      <h2 class="text-secondary-1 text-lg lg:text-xl font-semibold mb-4">
        Características
      </h2>
      {
        fullFeaturesTable ? (
          <div class="space-y-3 pl-6">
            {fullFeaturesTable.map(({ section, items }) => (
              <div class="font-inter">
                <h3 class="bg-[#D8E6F7] text-primary-1 text-lg lg:text-xl font-light px-5 py-2 rounded mb-2">
                  {section}
                </h3>
                <ul class="text-[#666666] text-base lg:text-lg font-light list-disc pl-5 space-y-1 mb-5">
                  {items.map((item) => (
                    <li>{item}</li>
                  ))}
                </ul>
              </div>
            ))}
          </div>
        ) : (
          fullFeatures && (
            <ul class="text-[#666666] text-base lg:text-lg list-disc pl-6 lg:pl-12 space-y-1">
              {fullFeatures.map((f) => (
                <li>{f}</li>
              ))}
            </ul>
          )
        )
      }
    </div>
  </section>
</Layout>

<!-- Script para mostrar/ocultar el formulario -->
<script>
  document.addEventListener("astro:page-load", () => {
    const quoteBtn = document.getElementById("quote-btn");
    if (quoteBtn) {
      quoteBtn.addEventListener("click", () => {
        const form = document.getElementById("contact-form");
        if (form) {
          form.classList.toggle("hidden");
          form.scrollIntoView({ behavior: "smooth" });
        }
      });
    }
  });
</script>
